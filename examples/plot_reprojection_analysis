#!/usr/bin/env python3

from matplotlib import pyplot as plt
import pandas as pd
import numpy as np

result_file = '/home/rik/data/hypersim/error_statistics.csv'
df=pd.read_csv(result_file, sep=',',header=0)
max_error = df['max_error'].values

# Replace out of bound values.
out_of_bounds = 100
max_error = np.where(max_error < out_of_bounds, max_error, out_of_bounds)

# Compute valid dataset share.
cut_off_threshold = 10
num_valid = len(max_error[max_error < cut_off_threshold])
num_total = len(max_error)
print('{:d} out of {:d} or {:.2f}% of frames have less than {:d} pixel maximum reprojection error.'.format(num_valid, num_total, num_valid/num_total*100, cut_off_threshold))


plt.figure()
plt.hist(max_error)
plt.xlabel('Max. Reprojection Error [px]')
plt.ylabel('Number of Frames')
plt.axvline(x=cut_off_threshold, color='k', linestyle='--')
plt.grid()

# Compute valid dataset share.
cut_off_threshold = 1
num_valid = len(median_error[median_error < cut_off_threshold])
num_total = len(median_error)
print('{:d} out of {:d} or {:.2f}% of frames have less than {:d} pixel median reprojection error.'.format(num_valid, num_total, num_valid/num_total*100, cut_off_threshold))


plt.figure()
plt.hist(max_error)
plt.xlabel('Median Reprojection Error [px]')
plt.ylabel('Number of Frames')
plt.axvline(x=cut_off_threshold, color='k', linestyle='--')
plt.grid()
plt.show()
